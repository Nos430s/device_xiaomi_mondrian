diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index 1077f62b9074..71e2a398557e 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -58,6 +58,7 @@
         <item><xliff:g id="id">@string/status_bar_ethernet</xliff:g></item>
         <item><xliff:g id="id">@string/status_bar_wifi</xliff:g></item>
         <item><xliff:g id="id">@string/status_bar_hotspot</xliff:g></item>
+        <item><xliff:g id="id">@string/status_bar_ims</xliff:g></item>
         <item><xliff:g id="id">@string/status_bar_mobile</xliff:g></item>
         <item><xliff:g id="id">@string/status_bar_airplane</xliff:g></item>
         <item><xliff:g id="id">@string/status_bar_battery</xliff:g></item>
@@ -100,6 +101,7 @@
     <string translatable="false" name="status_bar_call_strength">call_strength</string>
     <string translatable="false" name="status_bar_sensors_off">sensors_off</string>
     <string translatable="false" name="status_bar_screen_record">screen_record</string>
+    <string translatable="false" name="status_bar_ims">ims</string>
 
     <!-- Flag indicating whether the surface flinger has limited
          alpha compositing functionality in hardware.  If set, the window
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index d42c04fb85f8..3ca4e6b6eea2 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -3149,7 +3149,8 @@
   <java-symbol type="string" name="status_bar_camera" />
   <java-symbol type="string" name="status_bar_sensors_off" />
   <java-symbol type="string" name="status_bar_screen_record" />
-
+  <java-symbol type="string" name="status_bar_ims" />
+  
   <!-- Locale picker -->
   <java-symbol type="id" name="locale_search_menu" />
   <java-symbol type="layout" name="language_picker_item" />
diff --git a/packages/SystemUI/Android.bp b/packages/SystemUI/Android.bp
index 45b6de944d91..9bbcb883b87e 100644
--- a/packages/SystemUI/Android.bp
+++ b/packages/SystemUI/Android.bp
@@ -183,6 +183,10 @@ android_library {
     manifest: "AndroidManifest.xml",
     additional_manifests: ["CustomManifest.xml"],
 
+    libs: [
+        "ims-common",
+    ],
+
     kotlincflags: ["-Xjvm-default=enable"],
 
     plugins: ["dagger2-compiler"],
@@ -344,6 +348,7 @@ android_library {
         "android.test.runner",
         "android.test.base",
         "android.test.mock",
+        "ims-common",
     ],
     kotlincflags: ["-Xjvm-default=enable"],
     aaptflags: [
@@ -457,6 +462,10 @@ android_app {
     system_ext_specific: true,
     certificate: "platform",
     privileged: true,
+    
+    libs: [
+        "ims-common",
+    ],
 
     kotlincflags: ["-Xjvm-default=enable"],
 
diff --git a/packages/SystemUI/res/drawable/ic_statusbar_volte.xml b/packages/SystemUI/res/drawable/ic_statusbar_volte.xml
new file mode 100644
index 000000000000..d92bc0d131d2
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_statusbar_volte.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="23.375dp"
+        android:height="16.5dp"
+        android:viewportWidth="34"
+        android:viewportHeight="24"
+        android:tint="?android:attr/colorControlNormal">
+        <path
+            android:fillColor="#ffffffff"
+            android:fillType="evenOdd"
+            android:pathData="M30,2C31.1046,2 32,2.8954 32,4L32,20C32,21.1046 31.1046,22 30,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L30,2ZM5.1853,13L3,13L4.6846,21L6.6043,21L7.528,17.2661L8.4593,21L10.3787,21L12.0583,13L9.8779,13L9.2396,16.7405L8.3403,13L6.7179,13L5.8234,16.7433L5.1853,13ZM15.1495,15.8115L13.1366,15.8115L13.1366,21L15.1495,21L15.1495,15.8115ZM21.1165,13L16.0842,13L16.0842,21L18.2006,21L18.2006,18.0308L20.6481,18.0308L20.6481,16.0908L18.2006,16.0908L18.2006,14.94L21.1165,14.94L21.1165,13ZM24,15.8115L21.9871,15.8115L21.9871,21L24,21L24,15.8115ZM29.0586,6.9033L25.3057,7.2861L25.3057,8.7695L27.124,8.7217L27.124,17L29.0586,17L29.0586,6.9033ZM15.1495,13.0957L13.1366,13.0957L13.1366,14.6522L15.1495,14.6522L15.1495,13.0957ZM24,13.0957L21.9871,13.0957L21.9871,14.6522L24,14.6522L24,13.0957ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/ic_volte.xml b/packages/SystemUI/res/drawable/ic_volte.xml
new file mode 100644
index 000000000000..0597b0eb0141
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_volte.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2017, The Linux Foundation. All rights reserved.
+ Redistribution and use in source and binary forms, with or without
+ modification, are permitted provided that the following conditions are
+ met:
+        * Redistributions of source code must retain the above copyright
+        notice, this list of conditions and the following disclaimer.
+        * Redistributions in binary form must reproduce the above
+        copyright notice, this list of conditions and the following
+        disclaimer in the documentation and/or other materials provided
+        with the distribution.
+        * Neither the name of The Linux Foundation nor the names of its
+        contributors may be used to endorse or promote products derived
+        from this software without specific prior written permission.
+ THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
+ WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
+ ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
+ BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:height="24dp"
+        android:width="30.5dp"
+        android:viewportWidth="30.57"
+        android:viewportHeight="24.0">
+
+    <path
+        android:fillColor="#ffffffff"
+        android:pathData="M10.62,13.14 A0.42,0.42,0,0,0,10.23,13.36 A1.29,1.29,0,0,0,10.23,14.47 A0.45,0.45,0,0,0,11.01,14.47 A1.29,1.29,0,0,0,11.01,13.36 A0.42,0.42,0,0,0,10.62,13.14 Z" />
+    <path
+        android:fillColor="#ffffffff"
+        android:pathData="M28.54,5.6 L2.06,5.6 A1.11,1.11,0,0,0,0.95,6.71 L0.95,18.24 A1.11,1.11,0,0,0,2.06,19.35 L28.54,19.35 A1.11,1.11,0,0,0,29.65,18.24 L29.65,6.71 A1.11,1.11,0,0,0,28.54,5.6 Z M5.31,15.6 L3.43,9.84 L4.94,9.84 L6.18,14.05 L7.42,9.84 L8.82,9.84 L6.94,15.59 L5.31,15.59 Z M12.19,14.85 A1.46,1.46,0,0,1,11.56,15.43 A2.11,2.11,0,0,1,10.61,15.63 A2.13,2.13,0,0,1,9.66,15.43 A1.45,1.45,0,0,1,9,14.83 A2,2,0,0,1,9,13 A1.45,1.45,0,0,1,9.63,12.42 A2.13,2.13,0,0,1,10.58,12.22 A2.11,2.11,0,0,1,11.53,12.42 A1.46,1.46,0,0,1,12.16,13 A2,2,0,0,1,12.2,14.83 Z M13.1,12.85 A0.4,0.4,0,0,1,12.57,12.65 A1.76,1.76,0,0,0,11.23,11.77 A0.4,0.4,0,0,1,10.87,11.33 A0.4,0.4,0,0,1,11.31,10.97 A2.57,2.57,0,0,1,13.31,12.32 A0.4,0.4,0,0,1,13.1,12.8 Z M14.29,11.93 A0.5,0.5,0,0,1,13.62,11.7 A2.66,2.66,0,0,0,11.51,10.37 A0.5,0.5,0,0,1,11.56,9.37 A3.66,3.66,0,0,1,14.56,11.26 A0.5,0.5,0,0,1,14.29,11.88 Z M18.56,15.6 L14.9,15.6 L14.9,9.81 L16.33,9.81 L16.33,14.39 L18.55,14.39 L18.55,15.55 Z M22.56,10.98 L21,10.98 L21,15.6 L19.58,15.6 L19.58,10.94 L18,10.94 L18,9.81 L22.54,9.81 L22.54,10.94 Z M27.16,15.6 L23.16,15.6 L23.16,9.81 L27.03,9.81 L27.03,10.92 L24.64,10.92 L24.64,12 L26.91,12 L26.91,13.13 L24.64,13.13 L24.64,14.4 L27.17,14.4 L27.17,15.55 Z" />
+</vector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/ic_volte_no_voice.xml b/packages/SystemUI/res/drawable/ic_volte_no_voice.xml
new file mode 100644
index 000000000000..490b624927f0
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_volte_no_voice.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Copyright (c) 2018, The Linux Foundation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above
+ *    copyright notice, this list of conditions and the following
+ *    disclaimer in the documentation and/or other materials provided
+ *    with the distribution.
+ *  * Neither the name of The Linux Foundation nor the names of its
+ *    contributors may be used to endorse or promote products derived
+ *    from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+-->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="14dp"
+    android:height="17dp"
+    android:viewportWidth="14"
+    android:viewportHeight="17">
+
+    <path
+        android:pathData="M 1.2 4 H 13.7 V 13.2 H 1.2 V 4 Z" />
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M1.9,12.6V4h0.8v3.5h3.2V4h0.8v8.6H5.9v-4H2.7v4H1.9z" />
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M8,12.6V4h2.1c0.5,0,0.8,0,1.1,0.1c0.4,0.1,0.7,0.3,0.9,0.6c0.3,0.4,0.6,0.9,0.7,1.5s0.2,1.3,0.2,2c0,0.7-0.1,1.2-0.2,1.7c-0.1,0.5-0.2,0.9-0.4,1.3S12.2,11.8,12,12s-0.4,0.3-0.7,0.4s-0.6,0.1-1,0.1H8zM8.8,11.6h1.3c0.4,0,0.7-0.1,0.9-0.2c0.2-0.1,0.4-0.3,0.5-0.4c0.2-0.3,0.3-0.6,0.4-1.1c0.1-0.5,0.2-1,0.2-1.7c0-0.9-0.1-1.6-0.3-2.1c-0.2-0.5-0.5-0.8-0.8-1C11,5.1,10.6,5,10.1,5H8.8V11.6z" />
+    <path
+        android:fillColor="#000000"
+        android:pathData="M 2 9 L 1 9 L 1 9 L 2 9 Z" />
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M 0.5 9 H 13.5 V 10 H 0.5 V 9 Z" />
+</vector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_volte.xml b/packages/SystemUI/res/drawable/stat_sys_volte.xml
new file mode 100644
index 000000000000..bd43a31a3993
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_volte.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="16.5dp"
+        android:height="16dp"
+        android:viewportWidth="24"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M20,2C21.1046,2 22,2.8954 22,4L22,20C22,21.1046 21.1046,22 20,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L20,2ZM6.1649,12.6992L3.9737,12.6992L3.9737,20L9.1363,20L9.1363,18.2295L6.1649,18.2295L6.1649,12.6992ZM14.4015,12.6992L8.5827,12.6992L8.5827,14.4696L10.3799,14.4696L10.3799,20L12.5711,20L12.5711,14.4696L14.4015,14.4696L14.4015,12.6992ZM20,12.6992L14.8801,12.6992L14.8801,20L19.9952,20L19.9952,18.2295L17.0713,18.2295L17.0713,17.1192L19.5103,17.1192L19.5103,15.3488L17.0713,15.3488L17.0713,14.4696L20,14.4696L20,12.6992ZM12.6564,5.5545C11.7944,5.5545 11.1046,5.822 10.6087,6.3585C10.1207,6.8864 9.8777,7.5671 9.8777,8.3865L9.8777,8.3865L9.8777,8.4836C9.8777,9.3061 10.1207,9.9877 10.609,10.5142C11.1051,11.0491 11.7979,11.3155 12.6659,11.3155C13.5245,11.3155 14.2126,11.0489 14.7085,10.5142C15.1968,9.9877 15.4398,9.3061 15.4398,8.4836L15.4398,8.4836L15.4398,8.3865C15.4398,7.5671 15.1968,6.8864 14.7088,6.3585C14.2128,5.822 13.5214,5.5545 12.6564,5.5545ZM5.9789,4.0071L3.6754,4.0071L6.0985,11.3079L8.2589,11.3079L10.6923,4.0071L8.3841,4.0071L7.1754,8.3393L5.9789,4.0071ZM12.6564,7.0409C12.9765,7.0409 13.2047,7.1634 13.341,7.4085C13.4773,7.6536 13.5454,7.9796 13.5454,8.3865L13.5454,8.3865L13.5454,8.4836C13.5454,8.8998 13.4773,9.2281 13.341,9.4685C13.2047,9.709 12.9797,9.8292 12.6659,9.8292C12.3426,9.8292 12.1136,9.7097 11.9789,9.4708C11.8442,9.2319 11.7768,8.9028 11.7768,8.4836L11.7768,8.4836L11.7768,8.3865C11.7768,7.9827 11.8442,7.6574 11.9789,7.4108C12.1136,7.1642 12.3394,7.0409 12.6564,7.0409ZM16.7421,5.7844C16.5704,5.5132 16.2121,5.4255 15.9419,5.5884C15.6716,5.7513 15.5917,6.1032 15.7634,6.3743C16.1526,6.9889 16.3575,7.7005 16.3526,8.4173C16.3504,8.7334 16.6082,8.9979 16.9284,9.0079C17.2486,9.018 17.5099,8.7698 17.5121,8.4536C17.5185,7.517 17.251,6.5879 16.7421,5.7844ZM18.7094,4.3699C18.498,4.0607 18.0768,3.973 17.7686,4.1741C17.4604,4.3752 17.3819,4.789 17.5932,5.0982C18.2179,6.012 18.5607,7.0863 18.5776,8.1765C18.5834,8.5454 18.8909,8.8472 19.2646,8.8506C19.6383,8.854 19.9366,8.5577 19.9308,8.1889C19.9099,6.8364 19.4848,5.5044 18.7094,4.3699Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_volte_slot1.xml b/packages/SystemUI/res/drawable/stat_sys_volte_slot1.xml
new file mode 100644
index 000000000000..de72ce9b99d8
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_volte_slot1.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="22dp"
+        android:height="16dp"
+        android:viewportWidth="32"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M28,2C29.1046,2 30,2.8954 30,4L30,20C30,21.1046 29.1046,22 28,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L28,2ZM6.2504,12.386L4,12.386L4,20.0953L9.3021,20.0953L9.3021,18.2258L6.2504,18.2258L6.2504,12.386ZM14.7096,12.386L8.7336,12.386L8.7336,14.2555L10.5793,14.2555L10.5793,20.0953L12.8297,20.0953L12.8297,14.2555L14.7096,14.2555L14.7096,12.386ZM20.4594,12.386L15.2012,12.386L15.2012,20.0953L20.4545,20.0953L20.4545,18.2258L17.4516,18.2258L17.4516,17.0534L19.9564,17.0534L19.9564,15.1838L17.4516,15.1838L17.4516,14.2555L20.4594,14.2555L20.4594,12.386ZM27.0586,6.9033L23.3057,7.2861L23.3057,8.7695L25.124,8.7217L25.124,17L27.0586,17L27.0586,6.9033ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_volte_slot12.xml b/packages/SystemUI/res/drawable/stat_sys_volte_slot12.xml
new file mode 100644
index 000000000000..0c01b3f9880c
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_volte_slot12.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="22dp"
+        android:height="16dp"
+        android:viewportWidth="32"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M28,2C29.1046,2 30,2.8954 30,4L30,20C30,21.1046 29.1046,22 28,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L28,2ZM6.2504,12.386L4,12.386L4,20.0953L9.3021,20.0953L9.3021,18.2258L6.2504,18.2258L6.2504,12.386ZM14.7096,12.386L8.7336,12.386L8.7336,14.2555L10.5793,14.2555L10.5793,20.0953L12.8297,20.0953L12.8297,14.2555L14.7096,14.2555L14.7096,12.386ZM20.4594,12.386L15.2012,12.386L15.2012,20.0953L20.4545,20.0953L20.4545,18.2258L17.4516,18.2258L17.4516,17.0534L19.9564,17.0534L19.9564,15.1838L17.4516,15.1838L17.4516,14.2555L20.4594,14.2555L20.4594,12.386ZM25.5439,12.7881C24.8799,12.7881 24.3493,13.0086 23.9521,13.4497C23.555,13.8908 23.363,14.4287 23.376,15.0635L23.376,15.0635L23.3906,15.0928L24.7432,15.0928C24.7432,14.7347 24.8123,14.4409 24.9507,14.2114C25.089,13.9819 25.2868,13.8672 25.5439,13.8672C25.7913,13.8672 25.9744,13.9575 26.0933,14.1382C26.2121,14.3188 26.2715,14.5638 26.2715,14.873C26.2715,15.0977 26.2104,15.3467 26.0884,15.6201C25.9663,15.8936 25.7653,16.2191 25.4854,16.5967L25.4854,16.5967L23.5176,19.082L23.5176,20L27.873,20L27.873,18.9258L25.3047,18.9258L26.2715,17.5244C26.7728,16.9157 27.13,16.429 27.3433,16.0645C27.5565,15.6999 27.6631,15.3011 27.6631,14.8682C27.6631,14.2269 27.4784,13.7199 27.1089,13.3472C26.7394,12.9744 26.2178,12.7881 25.5439,12.7881ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM26.6133,3.7881L23.9326,4.0615L23.9326,5.1211L25.2314,5.0869L25.2314,11L26.6133,11L26.6133,3.7881ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_volte_slot2.xml b/packages/SystemUI/res/drawable/stat_sys_volte_slot2.xml
new file mode 100644
index 000000000000..e62886ea5896
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_volte_slot2.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="22dp"
+        android:height="16dp"
+        android:viewportWidth="32"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M28,2C29.1046,2 30,2.8954 30,4L30,20C30,21.1046 29.1046,22 28,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L28,2ZM6.2504,12.386L4,12.386L4,20.0953L9.3021,20.0953L9.3021,18.2258L6.2504,18.2258L6.2504,12.386ZM14.7096,12.386L8.7336,12.386L8.7336,14.2555L10.5793,14.2555L10.5793,20.0953L12.8297,20.0953L12.8297,14.2555L14.7096,14.2555L14.7096,12.386ZM20.4594,12.386L15.2012,12.386L15.2012,20.0953L20.4545,20.0953L20.4545,18.2258L17.4516,18.2258L17.4516,17.0534L19.9564,17.0534L19.9564,15.1838L17.4516,15.1838L17.4516,14.2555L20.4594,14.2555L20.4594,12.386ZM25.5615,6.9033C24.6318,6.9033 23.889,7.2121 23.333,7.8296C22.777,8.4471 22.5081,9.2002 22.5264,10.0889L22.5264,10.0889L22.5469,10.1299L24.4404,10.1299C24.4404,9.6286 24.5373,9.2173 24.731,8.896C24.9246,8.5747 25.2015,8.4141 25.5615,8.4141C25.9079,8.4141 26.1642,8.5405 26.3306,8.7935C26.4969,9.0464 26.5801,9.3893 26.5801,9.8223C26.5801,10.1367 26.4946,10.4853 26.3237,10.8682C26.1528,11.251 25.8714,11.7067 25.4795,12.2354L25.4795,12.2354L22.7246,15.7148L22.7246,17L28.8223,17L28.8223,15.4961L25.2266,15.4961L26.5801,13.5342C27.2819,12.682 27.7821,12.0007 28.0806,11.4902C28.3791,10.9798 28.5283,10.4216 28.5283,9.8154C28.5283,8.9176 28.2697,8.2078 27.7524,7.686C27.2352,7.1642 26.5049,6.9033 25.5615,6.9033ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_vowifi.xml b/packages/SystemUI/res/drawable/stat_sys_vowifi.xml
new file mode 100644
index 000000000000..55a9f5563f0c
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_vowifi.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="19.9375dp"
+        android:height="16dp"
+        android:viewportWidth="29"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M25,2C26.1046,2 27,2.8954 27,4L27,20C27,21.1046 26.1046,22 25,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L25,2ZM6.1712,12.588L4,12.588L5.6738,19.9941L7.5811,19.9941L8.4989,16.3958L9.4242,19.9941L11.3312,19.9941L13,12.588L10.8336,12.588L10.1995,16.486L9.3059,12.588L7.694,12.588L6.8052,16.4887L6.1712,12.588ZM16.0714,15.2973L14.0714,15.2973L14.0714,19.9941L16.0714,19.9941L16.0714,15.2973ZM22,12.588L17,12.588L17,19.9941L19.1028,19.9941L19.1028,17.1328L21.5346,17.1328L21.5346,15.5665L19.1028,15.5665L19.1028,14.1801L22,14.1801L22,12.588ZM24.8649,15.2973L22.8649,15.2973L22.8649,19.9941L24.8649,19.9941L24.8649,15.2973ZM16.0714,12.6801L14.0714,12.6801L14.0714,14.1801L16.0714,14.1801L16.0714,12.6801ZM24.8649,12.6801L22.8649,12.6801L22.8649,14.1801L24.8649,14.1801L24.8649,12.6801ZM14.7786,5.5474C13.9167,5.5474 13.2268,5.8149 12.731,6.3514C12.243,6.8793 12,7.56 12,8.3794L12,8.3794L12,8.4765C12,9.299 12.243,9.9806 12.7313,10.5072C13.2273,11.042 13.9202,11.3085 14.7881,11.3085C15.6468,11.3085 16.3349,11.0418 16.8307,10.5072C17.319,9.9806 17.562,9.299 17.562,8.4765L17.562,8.4765L17.562,8.3794C17.562,7.56 17.319,6.8793 16.831,6.3514C16.3351,5.8149 15.6437,5.5474 14.7786,5.5474ZM6.3035,4L4,4L6.4231,11.3008L8.5835,11.3008L11.0169,4L8.7087,4L7.5,8.3322L6.3035,4ZM14.7786,7.0338C15.0988,7.0338 15.327,7.1563 15.4633,7.4014C15.5995,7.6465 15.6677,7.9725 15.6677,8.3794L15.6677,8.3794L15.6677,8.4765C15.6677,8.8927 15.5995,9.221 15.4633,9.4614C15.327,9.7019 15.1019,9.8221 14.7881,9.8221C14.4648,9.8221 14.2358,9.7026 14.1011,9.4637C13.9664,9.2248 13.8991,8.8958 13.8991,8.4765L13.8991,8.4765L13.8991,8.3794C13.8991,7.9756 13.9664,7.6503 14.1011,7.4037C14.2358,7.1571 14.4617,7.0338 14.7786,7.0338ZM22.2544,4.3884C22.0765,4.0587 21.6668,3.9275 21.3393,4.0953C21.0117,4.2631 20.8904,4.6663 21.0683,4.996C21.594,5.9701 21.8227,7.0744 21.7255,8.1603C21.6927,8.5278 21.967,8.8601 22.3383,8.9025C22.7095,8.945 23.0372,8.6815 23.07,8.3141C23.1906,6.9668 22.907,5.5977 22.2544,4.3884ZM20.1501,5.5894C20.0077,5.3018 19.6605,5.1771 19.3747,5.3109C19.0889,5.4447 18.9727,5.7863 19.1151,6.0739C19.4379,6.7257 19.5673,7.4549 19.4875,8.1672C19.4523,8.4814 19.681,8.7713 19.9984,8.8148C20.3158,8.8582 20.6016,8.6388 20.6369,8.3246C20.7412,7.3938 20.5722,6.4418 20.1501,5.5894Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_vowifi_slot1.xml b/packages/SystemUI/res/drawable/stat_sys_vowifi_slot1.xml
new file mode 100644
index 000000000000..f7d36e099e6b
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_vowifi_slot1.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="23.375dp"
+        android:height="16dp"
+        android:viewportWidth="34"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M30,2C31.1046,2 32,2.8954 32,4L32,20C32,21.1046 31.1046,22 30,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L30,2ZM5.1853,13L3,13L4.6846,21L6.6043,21L7.528,17.2661L8.4593,21L10.3787,21L12.0583,13L9.8779,13L9.2396,16.7405L8.3403,13L6.7179,13L5.8234,16.7433L5.1853,13ZM15.1495,15.8115L13.1366,15.8115L13.1366,21L15.1495,21L15.1495,15.8115ZM21.1165,13L16.0842,13L16.0842,21L18.2006,21L18.2006,18.0308L20.6481,18.0308L20.6481,16.0908L18.2006,16.0908L18.2006,14.94L21.1165,14.94L21.1165,13ZM24,15.8115L21.9871,15.8115L21.9871,21L24,21L24,15.8115ZM29.0586,6.9033L25.3057,7.2861L25.3057,8.7695L27.124,8.7217L27.124,17L29.0586,17L29.0586,6.9033ZM15.1495,13.0957L13.1366,13.0957L13.1366,14.6522L15.1495,14.6522L15.1495,13.0957ZM24,13.0957L21.9871,13.0957L21.9871,14.6522L24,14.6522L24,13.0957ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_vowifi_slot12.xml b/packages/SystemUI/res/drawable/stat_sys_vowifi_slot12.xml
new file mode 100644
index 000000000000..7a493fc2cd47
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_vowifi_slot12.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="24.0625dp"
+        android:height="16dp"
+        android:viewportWidth="35"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M31,2C32.1046,2 33,2.8954 33,4L33,20C33,21.1046 32.1046,22 31,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L31,2ZM5.1853,13L3,13L4.6846,21L6.6043,21L7.528,17.2661L8.4593,21L10.3787,21L12.0583,13L9.8779,13L9.2396,16.7405L8.3403,13L6.7179,13L5.8234,16.7433L5.1853,13ZM15.1495,15.8115L13.1366,15.8115L13.1366,21L15.1495,21L15.1495,15.8115ZM21.1165,13L16.0842,13L16.0842,21L18.2006,21L18.2006,18.0308L20.6481,18.0308L20.6481,16.0908L18.2006,16.0908L18.2006,14.94L21.1165,14.94L21.1165,13ZM24,15.8115L21.9871,15.8115L21.9871,21L24,21L24,15.8115ZM28.5439,13.7881C27.8799,13.7881 27.3493,14.0086 26.9521,14.4497C26.555,14.8908 26.363,15.4287 26.376,16.0635L26.376,16.0635L26.3906,16.0928L27.7432,16.0928C27.7432,15.7347 27.8123,15.4409 27.9507,15.2114C28.089,14.9819 28.2868,14.8672 28.5439,14.8672C28.7913,14.8672 28.9744,14.9575 29.0933,15.1382C29.2121,15.3188 29.2715,15.5638 29.2715,15.873C29.2715,16.0977 29.2104,16.3467 29.0884,16.6201C28.9663,16.8936 28.7653,17.2191 28.4854,17.5967L28.4854,17.5967L26.5176,20.082L26.5176,21L30.873,21L30.873,19.9258L28.3047,19.9258L29.2715,18.5244C29.7728,17.9157 30.13,17.429 30.3433,17.0645C30.5565,16.6999 30.6631,16.3011 30.6631,15.8682C30.6631,15.2269 30.4784,14.7199 30.1089,14.3472C29.7394,13.9744 29.2178,13.7881 28.5439,13.7881ZM15.1495,13.0957L13.1366,13.0957L13.1366,14.6522L15.1495,14.6522L15.1495,13.0957ZM24,13.0957L21.9871,13.0957L21.9871,14.6522L24,14.6522L24,13.0957ZM29.6133,4.2881L26.9326,4.5615L26.9326,5.6211L28.2314,5.5869L28.2314,11.5L29.6133,11.5L29.6133,4.2881ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/stat_sys_vowifi_slot2.xml b/packages/SystemUI/res/drawable/stat_sys_vowifi_slot2.xml
new file mode 100644
index 000000000000..384649d8a6e0
--- /dev/null
+++ b/packages/SystemUI/res/drawable/stat_sys_vowifi_slot2.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetTop="0.5dp"
+    android:insetBottom="0.5dp"
+    android:insetLeft="2dp"
+    android:insetRight="2dp">
+    <vector
+        android:width="24.0625dp"
+        android:height="16dp"
+        android:viewportWidth="35"
+        android:viewportHeight="24">
+        <path
+            android:fillColor="#000000"
+            android:fillType="evenOdd"
+            android:pathData="M31,2C32.1046,2 33,2.8954 33,4L33,20C33,21.1046 32.1046,22 31,22L4,22C2.8954,22 2,21.1046 2,20L2,4C2,2.8954 2.8954,2 4,2L31,2ZM5.1853,13L3,13L4.6846,21L6.6043,21L7.528,17.2661L8.4593,21L10.3787,21L12.0583,13L9.8779,13L9.2396,16.7405L8.3403,13L6.7179,13L5.8234,16.7433L5.1853,13ZM15.1495,15.8115L13.1366,15.8115L13.1366,21L15.1495,21L15.1495,15.8115ZM21.1165,13L16.0842,13L16.0842,21L18.2006,21L18.2006,18.0308L20.6481,18.0308L20.6481,16.0908L18.2006,16.0908L18.2006,14.94L21.1165,14.94L21.1165,13ZM24,15.8115L21.9871,15.8115L21.9871,21L24,21L24,15.8115ZM28.5615,6.9033C27.6318,6.9033 26.889,7.2121 26.333,7.8296C25.777,8.4471 25.5081,9.2002 25.5264,10.0889L25.5264,10.0889L25.5469,10.1299L27.4404,10.1299C27.4404,9.6286 27.5373,9.2173 27.731,8.896C27.9246,8.5747 28.2015,8.4141 28.5615,8.4141C28.9079,8.4141 29.1642,8.5405 29.3306,8.7935C29.4969,9.0464 29.5801,9.3893 29.5801,9.8223C29.5801,10.1367 29.4946,10.4853 29.3237,10.8682C29.1528,11.251 28.8714,11.7067 28.4795,12.2354L28.4795,12.2354L25.7246,15.7148L25.7246,17L31.8223,17L31.8223,15.4961L28.2266,15.4961L29.5801,13.5342C30.2819,12.682 30.7821,12.0007 31.0806,11.4902C31.3791,10.9798 31.5283,10.4216 31.5283,9.8154C31.5283,8.9176 31.2697,8.2078 30.7524,7.686C30.2352,7.1642 29.5049,6.9033 28.5615,6.9033ZM15.1495,13.0957L13.1366,13.0957L13.1366,14.6522L15.1495,14.6522L15.1495,13.0957ZM24,13.0957L21.9871,13.0957L21.9871,14.6522L24,14.6522L24,13.0957ZM12.8537,5.386C11.9685,5.386 11.26,5.6684 10.7507,6.2349C10.2951,6.7417 10.0475,7.3818 10.0062,8.1441L10,8.3764L10,8.4789C10,9.3475 10.2496,10.0672 10.7511,10.6232C11.2605,11.188 11.9721,11.4694 12.8635,11.4694C13.7453,11.4694 14.452,11.1878 14.9612,10.6232C15.4172,10.1178 15.6648,9.477 15.7061,8.7121L15.7123,8.4789L15.7123,8.3764C15.7123,7.5112 15.4628,6.7924 14.9616,6.2349C14.4522,5.6684 13.7421,5.386 12.8537,5.386ZM5.3658,3.386L3,3.386L5.4886,11.0953L7.7073,11.0953L10.2065,3.386L7.836,3.386L6.5946,7.9606L5.3658,3.386ZM12.8537,6.9555C13.1825,6.9555 13.4169,7.0849 13.5568,7.3437C13.6735,7.5593 13.7415,7.8343 13.761,8.1687L13.7668,8.3764L13.7668,8.4789C13.7668,8.9184 13.6968,9.2651 13.5568,9.519C13.4169,9.7729 13.1857,9.8998 12.8635,9.8998C12.5314,9.8998 12.2963,9.7737 12.1579,9.5214C12.0393,9.3052 11.9716,9.019 11.9546,8.6628L11.9504,8.4789L11.9504,8.3764C11.9504,7.95 12.0196,7.6065 12.1579,7.3461C12.2963,7.0857 12.5282,6.9555 12.8537,6.9555ZM15.9726,4.976C15.7035,5.1694 15.6422,5.5444 15.8357,5.8134C16.2742,6.4232 16.5284,7.1502 16.5664,7.9005C16.5832,8.2315 16.865,8.4862 17.196,8.4694C17.5269,8.4526 17.7816,8.1708 17.7649,7.8398C17.7152,6.8594 17.3833,5.9102 16.81,5.1128C16.6165,4.8438 16.2416,4.7825 15.9726,4.976ZM17.7566,3.3465C17.4509,3.5832 17.3949,4.0228 17.6316,4.3285C18.3309,5.2319 18.7494,6.3272 18.8326,7.4668C18.8608,7.8523 19.1962,8.1421 19.5818,8.1139C19.9674,8.0857 20.2571,7.7503 20.2289,7.3648C20.1256,5.951 19.6068,4.593 18.7386,3.4715C18.502,3.1658 18.0623,3.1099 17.7566,3.3465Z"
+            android:strokeWidth="1" />
+    </vector>
+</inset>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/status_bar_ims_group.xml b/packages/SystemUI/res/layout/status_bar_ims_group.xml
new file mode 100644
index 000000000000..fb8f24100ca3
--- /dev/null
+++ b/packages/SystemUI/res/layout/status_bar_ims_group.xml
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+**
+** Copyright 2020, The AospExtended Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<com.android.systemui.statusbar.StatusBarImsView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/ims_combo"
+    android:layout_width="wrap_content"
+    android:layout_height="match_parent"
+    android:gravity="center_vertical">
+
+    <com.android.keyguard.AlphaOptimizedLinearLayout
+        android:id="@+id/ims_group"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:gravity="center_vertical">
+
+        <ImageView
+            android:id="@+id/ims_slot1_icon"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical"
+            android:visibility="gone" />
+
+        <ImageView
+            android:id="@+id/ims_slot2_icon"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical"
+            android:visibility="gone" />
+    </com.android.keyguard.AlphaOptimizedLinearLayout>
+</com.android.systemui.statusbar.StatusBarImsView>
\ No newline at end of file
diff --git a/packages/SystemUI/res/values/custom_strings.xml b/packages/SystemUI/res/values/custom_strings.xml
index 6ce8cbd99204..cee221ba8dbd 100644
--- a/packages/SystemUI/res/values/custom_strings.xml
+++ b/packages/SystemUI/res/values/custom_strings.xml
@@ -22,4 +22,7 @@
 
     <!-- Data Saver Statusbar Icon -->
     <string name="status_bar_data_saver">Data saver</string>
+
+    <!-- Name of the ims status bar icon. -->
+    <string name="status_bar_ims">VoLTE/VoWiFi</string>
 </resources>
diff --git a/packages/SystemUI/res/xml/status_bar_prefs.xml b/packages/SystemUI/res/xml/status_bar_prefs.xml
index d542d132c7d5..abfa6e5fc30e 100644
--- a/packages/SystemUI/res/xml/status_bar_prefs.xml
+++ b/packages/SystemUI/res/xml/status_bar_prefs.xml
@@ -76,6 +76,11 @@
         android:key="volume"
         android:title="@string/volume_ringer_status_vibrate" />
 
+    <com.android.systemui.tuner.StatusBarSwitch
+        android:icon="@drawable/ic_statusbar_volte"
+        android:key="ims"
+        android:title="@string/status_bar_ims" />
+
     <com.android.systemui.tuner.StatusBarSwitch
         android:icon="@drawable/ic_statusbar_wifi"
         android:key="wifi"
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarImsView.java b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarImsView.java
new file mode 100644
index 000000000000..553cdf862d03
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarImsView.java
@@ -0,0 +1,217 @@
+/*
+ * Copyright (C) 2018 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.statusbar;
+
+import android.content.Context;
+import android.content.res.ColorStateList;
+import android.graphics.Rect;
+import android.os.UserHandle;
+import android.provider.Settings;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+
+import com.android.systemui.R;
+import com.android.systemui.statusbar.connectivity.ImsIconState;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import static com.android.systemui.plugins.DarkIconDispatcher.getTint;
+import static com.android.systemui.statusbar.StatusBarIconView.STATE_DOT;
+import static com.android.systemui.statusbar.StatusBarIconView.STATE_HIDDEN;
+import static com.android.systemui.statusbar.StatusBarIconView.STATE_ICON;
+
+public class StatusBarImsView extends FrameLayout implements
+        StatusIconDisplayable {
+    private static final String TAG = "StatusBarImsView";
+
+    /// Used to show etc dots
+    private StatusBarIconView mDotView;
+
+    private ImsIconState mState;
+    private LinearLayout mImsGroup;
+    private ImageView mSlot1Icon;
+    private ImageView mSlot2Icon;
+    private String mSlot;
+    private int mVisibleState = -1;
+
+    public StatusBarImsView(Context context) {
+        super(context);
+    }
+
+    public StatusBarImsView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public StatusBarImsView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+    }
+
+    public StatusBarImsView(Context context, AttributeSet attrs, int defStyleAttr,
+                            int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+    }
+
+    public static StatusBarImsView fromContext(Context context, String slot) {
+        LayoutInflater inflater = LayoutInflater.from(context);
+        StatusBarImsView v = (StatusBarImsView) inflater.inflate(R.layout.status_bar_ims_group, null);
+        v.setSlot(slot);
+        v.init();
+        v.setVisibleState(STATE_ICON);
+        return v;
+    }
+
+    public void init() {
+        mImsGroup = findViewById(R.id.ims_group);
+        mSlot1Icon = findViewById(R.id.ims_slot1_icon);
+        mSlot2Icon = findViewById(R.id.ims_slot2_icon);
+
+        initDotView();
+    }
+
+    private void initDotView() {
+        mDotView = new StatusBarIconView(mContext, mSlot, null);
+        mDotView.setVisibleState(STATE_DOT);
+
+        int width = mContext.getResources().getDimensionPixelSize(R.dimen.status_bar_icon_size);
+        LayoutParams lp = new LayoutParams(width, width);
+        lp.gravity = Gravity.CENTER_VERTICAL | Gravity.START;
+        addView(mDotView, lp);
+    }
+
+    @Override
+    public String getSlot() {
+        return mSlot;
+    }
+
+    public void setSlot(String slot) {
+        mSlot = slot;
+    }
+
+    @Override
+    public void setVisibleState(int state, boolean animate) {
+        if (state == mVisibleState) {
+            return;
+        }
+        mVisibleState = state;
+
+        switch (state) {
+            case STATE_ICON:
+                mImsGroup.setVisibility(View.VISIBLE);
+                mDotView.setVisibility(View.GONE);
+                break;
+            case STATE_DOT:
+                mImsGroup.setVisibility(View.GONE);
+                mDotView.setVisibility(View.VISIBLE);
+                break;
+            case STATE_HIDDEN:
+            default:
+                mImsGroup.setVisibility(View.GONE);
+                mDotView.setVisibility(View.GONE);
+                break;
+        }
+    }
+
+    @Override
+    public int getVisibleState() {
+        return mVisibleState;
+    }
+
+    @Override
+    public boolean isIconVisible() {
+        return mState != null && mState.visible;
+    }
+
+    public void applyImsState(ImsIconState state) {
+        boolean requestLayout = false;
+
+        if (state == null) {
+            requestLayout = getVisibility() != View.GONE;
+            setVisibility(View.GONE);
+            mState = null;
+        } else if (mState == null) {
+            requestLayout = true;
+            mState = state;
+            initViewState(state);
+        } else if (!mState.equals(state)) {
+            requestLayout = updateState(state);
+        }
+
+        if (requestLayout) {
+            requestLayout();
+        }
+    }
+
+    private boolean updateState(ImsIconState state) {
+        boolean needsLayout = false;
+
+        if (mState.visible != state.visible
+                || mState.slot1Icon != state.slot1Icon
+                || mState.slot2Icon != state.slot2Icon) {
+            initViewState(state);
+            needsLayout = true;
+        }
+
+        mState = state;
+        return needsLayout;
+    }
+
+    private void initViewState(ImsIconState state) {
+        setContentDescription(state.contentDescription);
+        mSlot1Icon.setVisibility(View.GONE);
+        mSlot2Icon.setVisibility(View.GONE);
+
+        if (state.slot1Icon > 0) {
+            mSlot1Icon.setImageDrawable(mContext.getDrawable(state.slot1Icon));
+            mSlot1Icon.setVisibility(View.VISIBLE);
+        }
+        if (state.slot2Icon > 0) {
+            mSlot2Icon.setImageDrawable(mContext.getDrawable(state.slot2Icon));
+            mSlot2Icon.setVisibility(View.VISIBLE);
+        }
+        setVisibility(state.visible ? View.VISIBLE : View.GONE);
+    }
+
+    @Override
+    public void setDecorColor(int color) {
+        mDotView.setDecorColor(color);
+    }
+
+    @Override
+    public void setStaticDrawableColor(int color) {
+        ColorStateList list = ColorStateList.valueOf(color);
+        mSlot1Icon.setImageTintList(list);
+        mSlot2Icon.setImageTintList(list);
+        mDotView.setDecorColor(color);
+    }
+
+    @Override
+    public void onDarkChanged(ArrayList<Rect> areas, float darkIntensity, int tint) {
+        int areaTint = getTint(areas, this, tint);
+        ColorStateList color = ColorStateList.valueOf(areaTint);
+        mSlot1Icon.setImageTintList(color);
+        mSlot2Icon.setImageTintList(color);
+        mDotView.setDecorColor(areaTint);
+        mDotView.setIconColor(areaTint, false);
+    }
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/CallbackHandler.java b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/CallbackHandler.java
index 163878004177..41b9c0db81d9 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/CallbackHandler.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/CallbackHandler.java
@@ -48,6 +48,7 @@ public class CallbackHandler extends Handler implements EmergencyListener, Signa
     private static final int MSG_MOBILE_DATA_ENABLED_CHANGED = 5;
     private static final int MSG_ADD_REMOVE_EMERGENCY        = 6;
     private static final int MSG_ADD_REMOVE_SIGNAL           = 7;
+    private static final int MSG_IMS_STATE_CHANGED           = 8;
     private static final int HISTORY_SIZE = 64;
     private static final SimpleDateFormat SSDF = new SimpleDateFormat("MM-dd HH:mm:ss.SSS");
 
@@ -115,6 +116,11 @@ public class CallbackHandler extends Handler implements EmergencyListener, Signa
                     mSignalCallbacks.remove((SignalCallback) msg.obj);
                 }
                 break;
+            case MSG_IMS_STATE_CHANGED:
+                for (SignalCallback signalCluster : mSignalCallbacks) {
+                    signalCluster.setImsIcon((ImsIconState) msg.obj);
+                }
+                break;
         }
     }
 
@@ -253,6 +259,11 @@ public class CallbackHandler extends Handler implements EmergencyListener, Signa
         obtainMessage(MSG_AIRPLANE_MODE_CHANGED, icon).sendToTarget();
     }
 
+    @Override
+    public void setImsIcon(ImsIconState icon) {
+        obtainMessage(MSG_IMS_STATE_CHANGED, icon).sendToTarget();;
+    }
+    
     void setListening(EmergencyListener listener, boolean listening) {
         obtainMessage(MSG_ADD_REMOVE_EMERGENCY, listening ? 1 : 0, 0, listener).sendToTarget();
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileSignalController.java b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileSignalController.java
index 03f75a7b7204..05bb6b8820e9 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileSignalController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileSignalController.java
@@ -17,8 +17,10 @@ package com.android.systemui.statusbar.connectivity;
 
 import static android.telephony.TelephonyManager.UNKNOWN_CARRIER_ID;
 
+import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.content.IntentFilter;
 import android.database.ContentObserver;
 import android.net.NetworkCapabilities;
 import android.os.Handler;
@@ -30,6 +32,13 @@ import android.telephony.SignalStrength;
 import android.telephony.SubscriptionInfo;
 import android.telephony.SubscriptionManager;
 import android.telephony.TelephonyManager;
+import android.telephony.ims.ImsException;
+import android.telephony.ims.ImsMmTelManager;
+import android.telephony.ims.ImsReasonInfo;
+import android.telephony.ims.ImsRegistrationAttributes;
+import android.telephony.ims.ImsStateCallback;
+import android.telephony.ims.RegistrationManager.RegistrationCallback;
+import android.telephony.ims.feature.MmTelFeature;
 import android.text.Html;
 import android.text.TextUtils;
 import android.util.Log;
@@ -61,6 +70,7 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
     private static final int STATUS_HISTORY_SIZE = 64;
     private final TelephonyManager mPhone;
     private final CarrierConfigTracker mCarrierConfigTracker;
+    private final ImsMmTelManager mImsMmTelManager;
     private final SubscriptionDefaults mDefaults;
     private final MobileMappingsProxy mMobileMappingsProxy;
     private final String mNetworkNameDefault;
@@ -77,6 +87,8 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
     @VisibleForTesting
     final MobileStatusTracker mMobileStatusTracker;
 
+    private boolean mIsVowifiAvailable;
+
     // Save the previous STATUS_HISTORY_SIZE states for logging.
     private final String[] mMobileStatusHistory = new String[STATUS_HISTORY_SIZE];
     // Where to copy the next state into.
@@ -112,6 +124,28 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
                 }
             };
 
+    private final RegistrationCallback mRegistrationCallback = new RegistrationCallback() {
+        @Override
+        public void onRegistered(ImsRegistrationAttributes attributes) {
+            Log.d(mTag, "onRegistered: " + "attributes=" + attributes);
+            mCurrentState.imsRegistered = true;
+            notifyListenersIfNecessary();
+        }
+
+        @Override
+        public void onRegistering(ImsRegistrationAttributes attr) {
+            mCurrentState.imsRegistered = false;
+            notifyListenersIfNecessary();
+        }
+
+        @Override
+        public void onUnregistered(ImsReasonInfo info) {
+            Log.d(mTag, "onDeregistered: " + "info=" + info);
+            mCurrentState.imsRegistered = false;
+            notifyListenersIfNecessary();
+        }
+    };
+
     // TODO: Reduce number of vars passed in, if we have the NetworkController, probably don't
     // need listener lists anymore.
     public MobileSignalController(
@@ -157,6 +191,7 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
                 updateTelephony();
             }
         };
+        mImsMmTelManager = ImsMmTelManager.createForSubscriptionId(info.getSubscriptionId());
         mMobileStatusTracker = mobileStatusTrackerFactory.createTracker(mMobileCallback);
     }
 
@@ -187,6 +222,12 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
         notifyListenersIfNecessary();
     }
 
+    @Override
+    void notifyListenersIfNecessary() {
+        mNetworkController.updateImsIcon();
+        super.notifyListenersIfNecessary();
+    }
+
     void setCarrierNetworkChangeMode(boolean carrierNetworkChangeMode) {
         mCurrentState.carrierNetworkChangeMode = carrierNetworkChangeMode;
         updateTelephony();
@@ -202,6 +243,14 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
         mContext.getContentResolver().registerContentObserver(Global.getUriFor(
                 Global.MOBILE_DATA + mSubscriptionInfo.getSubscriptionId()),
                 true, mObserver);
+        mContext.registerReceiver(mVolteSwitchObserver,
+                new IntentFilter("org.codeaurora.intent.action.ACTION_ENHANCE_4G_SWITCH"));
+        try {
+            mImsMmTelManager.registerImsStateCallback(mContext.getMainExecutor(),
+                    mImsStateCallback);
+        } catch (ImsException exception) {
+            Log.e(mTag, "failed to call registerImsStateCallback ", exception);
+        }
     }
 
     /**
@@ -210,6 +259,13 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
     public void unregisterListener() {
         mMobileStatusTracker.setListening(false);
         mContext.getContentResolver().unregisterContentObserver(mObserver);
+        try {
+            mImsMmTelManager.unregisterImsRegistrationCallback(mRegistrationCallback);
+        } catch (Exception e){
+            Log.e(mTag, "unregisterListener: fail to call unregisterImsRegistrationCallback", e);
+        }
+        mContext.unregisterReceiver(mVolteSwitchObserver);
+        mImsMmTelManager.unregisterImsStateCallback(mImsStateCallback);
     }
 
     private void updateInflateSignalStrength() {
@@ -252,6 +308,56 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
         return getCurrentIconId();
     }
 
+    private int getVolteResId() {
+        int resId = 0;
+
+        if ((mCurrentState.voiceCapable || mCurrentState.videoCapable)
+                && mCurrentState.imsRegistered) {
+            resId = R.drawable.ic_volte;
+        }
+        return resId;
+    }
+
+    private void setListeners() {
+        try {
+            Log.d(mTag, "setListeners: register CapabilitiesCallback and RegistrationCallback");
+            mImsMmTelManager.registerMmTelCapabilityCallback(mContext.getMainExecutor(),
+                    mCapabilityCallback);
+            mImsMmTelManager.registerImsRegistrationCallback (mContext.getMainExecutor(),
+                    mRegistrationCallback);
+        } catch (ImsException e) {
+            Log.e(mTag, "unable to register listeners.", e);
+        }
+        queryImsState();
+    }
+
+    private void queryImsState() {
+        TelephonyManager tm = mPhone.createForSubscriptionId(mSubscriptionInfo.getSubscriptionId());
+        mCurrentState.voiceCapable = tm.isVolteAvailable();
+        mCurrentState.videoCapable = tm.isVideoTelephonyAvailable();
+        mCurrentState.imsRegistered = mPhone.isImsRegistered(mSubscriptionInfo.getSubscriptionId());
+        mIsVowifiAvailable = tm.isWifiCallingAvailable();
+        if (DEBUG) {
+            Log.d(mTag, "queryImsState tm=" + tm + " phone=" + mPhone
+                    + " voiceCapable=" + mCurrentState.voiceCapable
+                    + " videoCapable=" + mCurrentState.videoCapable
+                    + " imsRegistered=" + mCurrentState.imsRegistered
+                    + " mIsVowifiAvailable=" + mIsVowifiAvailable);
+        }
+        notifyListenersIfNecessary();
+    }
+
+    private void removeListeners() {
+        try {
+            Log.d(mTag,
+                    "removeListeners: unregister CapabilitiesCallback and RegistrationCallback");
+            mImsMmTelManager.unregisterMmTelCapabilityCallback(mCapabilityCallback);
+            mImsMmTelManager.unregisterImsRegistrationCallback(mRegistrationCallback);
+        } catch (Exception e) {
+            Log.e(mTag, "removeListeners", e);
+        }
+    }
+
     @Override
     public void notifyListeners(SignalCallback callback) {
         // If the device is on carrier merged WiFi, we should let WifiSignalController to control
@@ -330,6 +436,11 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
         return new SbInfo(showTriangle, typeIcon, statusIcon);
     }
 
+    public boolean isVolteAvailable() {
+        return mCurrentState.imsRegistered
+                   && (mCurrentState.voiceCapable || mCurrentState.videoCapable);
+    }
+
     @Override
     protected MobileState cleanState() {
         return new MobileState();
@@ -553,6 +664,26 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
         mMobileStatusHistoryIndex = (mMobileStatusHistoryIndex + 1) % STATUS_HISTORY_SIZE;
     }
 
+    @VisibleForTesting
+    void setImsType(int imsType) {
+        // Do nothing
+    }
+
+    private int getDataNetworkType() {
+        return mCurrentState != null ?
+                mCurrentState.getDataNetworkType() : TelephonyManager.NETWORK_TYPE_UNKNOWN;
+    }
+
+    public boolean isVowifiAvailable() {
+        return mCurrentState.voiceCapable && mCurrentState.imsRegistered
+                && (getDataNetworkType() == TelephonyManager.NETWORK_TYPE_IWLAN
+                || mIsVowifiAvailable);
+    }
+
+    public int getVowifiModeSetting() {
+        return mImsMmTelManager.getVoWiFiModeSetting();
+    }
+
     @Override
     public void dump(PrintWriter pw) {
         super.dump(pw);
@@ -578,6 +709,45 @@ public class MobileSignalController extends SignalController<MobileState, Mobile
 
         dumpTableData(pw);
     }
+    private ImsMmTelManager.CapabilityCallback mCapabilityCallback = new ImsMmTelManager.CapabilityCallback() {
+        @Override
+        public void onCapabilitiesStatusChanged(MmTelFeature.MmTelCapabilities config) {
+            mCurrentState.voiceCapable =
+                    config.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_VOICE);
+            mCurrentState.videoCapable =
+                    config.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_VIDEO);
+            Log.d(mTag, "onCapabilitiesStatusChanged isVoiceCapable=" + mCurrentState.voiceCapable
+                    + " isVideoCapable=" + mCurrentState.videoCapable);
+            notifyListenersIfNecessary();
+        }
+    };
+
+    private final BroadcastReceiver mVolteSwitchObserver = new BroadcastReceiver() {
+        public void onReceive(Context context, Intent intent) {
+            Log.d(mTag, "action=" + intent.getAction());
+            notifyListeners();
+        }
+    };
+
+    private final ImsStateCallback mImsStateCallback = new ImsStateCallback() {
+        @Override
+        public void onUnavailable(int reason) {
+            Log.d(mTag, "ImsStateCallback.onUnavailable: reason=" + reason);
+            removeListeners();
+        }
+
+        @Override
+        public void onAvailable() {
+            Log.d(mTag, "ImsStateCallback.onAvailable");
+            setListeners();
+        }
+
+        @Override
+        public void onError() {
+            Log.e(mTag, "ImsStateCallback.onError");
+            removeListeners();
+        }
+    };
 
     /** Box for QS icon info */
     private static final class QsInfo {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileState.kt b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileState.kt
index 1fb6a982fdf3..3b1bb8b5f600 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileState.kt
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/MobileState.kt
@@ -46,6 +46,9 @@ internal class MobileState(
     @JvmField var dataState: Int = TelephonyManager.DATA_DISCONNECTED,
     // Tracks the on/off state of the defaultDataSubscription
     @JvmField var defaultDataOff: Boolean = false,
+    @JvmField var imsRegistered: Boolean = false,
+    @JvmField var voiceCapable: Boolean = false,
+    @JvmField var videoCapable: Boolean = false,
 ) : ConnectivityState() {
 
     @JvmField var telephonyDisplayInfo = TelephonyDisplayInfo(TelephonyManager.NETWORK_TYPE_UNKNOWN,
@@ -95,6 +98,9 @@ internal class MobileState(
         roaming = o.roaming
         dataState = o.dataState
         defaultDataOff = o.defaultDataOff
+        imsRegistered = o.imsRegistered;
+        voiceCapable = o.voiceCapable;
+        videoCapable = o.videoCapable;
 
         telephonyDisplayInfo = o.telephonyDisplayInfo
         serviceState = o.serviceState
@@ -149,6 +155,10 @@ internal class MobileState(
         return networkTypeResIdCache.get(icon, carrierId, context)
     }
 
+    fun getDataNetworkType(): Int {
+        return serviceState?.getDataNetworkType() ?: 0
+    }
+
     fun setFromMobileStatus(mobileStatus: MobileStatus) {
         activityIn = mobileStatus.activityIn
         activityOut = mobileStatus.activityOut
@@ -176,6 +186,9 @@ internal class MobileState(
         builder.append("userSetup=$userSetup,")
         builder.append("dataState=$dataState,")
         builder.append("defaultDataOff=$defaultDataOff,")
+        builder.append("imsRegistered=$imsRegistered,")
+        builder.append("voiceCapable=$voiceCapable,")
+        builder.append("videoCapable=$videoCapable,")
 
         // Computed properties
         builder.append("showQuickSettingsRatIcon=${showQuickSettingsRatIcon()},")
@@ -259,6 +272,9 @@ internal class MobileState(
         if (roaming != other.roaming) return false
         if (dataState != other.dataState) return false
         if (defaultDataOff != other.defaultDataOff) return false
+        if (imsRegistered != other.imsRegistered) return false
+        if (voiceCapable != other.voiceCapable) return false
+        if (videoCapable != other.videoCapable) return false
         if (telephonyDisplayInfo != other.telephonyDisplayInfo) return false
         if (serviceState != other.serviceState) return false
         if (signalStrength != other.signalStrength) return false
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/NetworkControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/NetworkControllerImpl.java
index 6e74542691a5..4f19ab20a2f1 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/NetworkControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/NetworkControllerImpl.java
@@ -403,6 +403,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
                         .toString();
                 recordLastNetworkCallback(callback);
                 updateConnectivity();
+                updateImsIcon();
             }
 
             @Override
@@ -439,6 +440,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
                         .toString();
                 recordLastNetworkCallback(callback);
                 updateConnectivity();
+                updateImsIcon();
             }
         };
         // Even though this callback runs on the receiver handler thread which also processes the
@@ -464,6 +466,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
                 }
                 mActiveMobileDataSubscription = subId;
                 doUpdateMobileControllers();
+                updateImsIcon();
             });
         };
 
@@ -476,6 +479,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
         if (DEBUG) Log.d(TAG, ": mClearForceValidated");
         mForceCellularValidated = false;
         updateConnectivity();
+        updateImsIcon();
     };
 
     boolean isInGroupDataSwitch(int subId1, int subId2) {
@@ -744,9 +748,97 @@ public class NetworkControllerImpl extends BroadcastReceiver
             MobileSignalController mobileSignalController = mMobileSignalControllers.valueAt(i);
             mobileSignalController.notifyListeners(cb);
         }
+        if (mMobileSignalControllers.size() == 2) {
+            boolean volte1 = mMobileSignalControllers.valueAt(0).isVolteAvailable();
+            boolean vowifi1 = mMobileSignalControllers.valueAt(0).isVowifiAvailable();
+            boolean volte2 = mMobileSignalControllers.valueAt(1).isVolteAvailable();            
+            boolean vowifi2 = mMobileSignalControllers.valueAt(1).isVowifiAvailable();
+            cb.setImsIcon(new ImsIconState(
+                    getImsResId(1, volte1, vowifi1),
+                    getImsResId(2, volte2, vowifi2),
+                    mContext.getString(com.android.internal.R.string.status_bar_ims)
+            ));
+        } else if (mMobileSignalControllers.size() == 1) {
+            boolean volte = mMobileSignalControllers.valueAt(0).isVolteAvailable();
+            boolean vowifi = mMobileSignalControllers.valueAt(0).isVowifiAvailable();
+            cb.setImsIcon(new ImsIconState(
+                    getImsResId(0, volte, vowifi),
+                    0,
+                    mContext.getString(com.android.internal.R.string.status_bar_ims)
+            ));
+        } else {
+            cb.setImsIcon(new ImsIconState(
+                    0,
+                    0,
+                    mContext.getString(com.android.internal.R.string.status_bar_ims)
+            ));
+        }
         mCallbackHandler.setListening(cb, true);
     }
 
+    public void updateImsIcon() {
+        if (mMobileSignalControllers.size() == 2) {
+            boolean volte1 = mMobileSignalControllers.valueAt(0).isVolteAvailable();
+            boolean vowifi1 = mMobileSignalControllers.valueAt(0).isVowifiAvailable();
+            boolean volte2 = mMobileSignalControllers.valueAt(1).isVolteAvailable();
+            boolean vowifi2 = mMobileSignalControllers.valueAt(1).isVowifiAvailable();
+            mCallbackHandler.setImsIcon(new ImsIconState(
+                    getImsResId(1, volte1, vowifi1),
+                    getImsResId(2, volte2, vowifi2),
+                    mContext.getString(com.android.internal.R.string.status_bar_ims)
+            ));
+        } else if (mMobileSignalControllers.size() == 1) {
+            boolean volte = mMobileSignalControllers.valueAt(0).isVolteAvailable();
+            boolean vowifi = mMobileSignalControllers.valueAt(0).isVowifiAvailable();
+            mCallbackHandler.setImsIcon(new ImsIconState(
+                    getImsResId(0, volte, vowifi),
+                    0,
+                    mContext.getString(com.android.internal.R.string.status_bar_ims)
+            ));
+        } else {
+            mCallbackHandler.setImsIcon(new ImsIconState(
+                    0,
+                    0,
+                    mContext.getString(com.android.internal.R.string.status_bar_ims)
+            ));
+        }
+    }
+
+    private int getVolteResId(int index) {
+        switch (index) {
+            case 0:
+                return R.drawable.stat_sys_volte;
+            case 1:
+                return R.drawable.stat_sys_volte_slot1;
+            case 2:
+                return R.drawable.stat_sys_volte_slot2;
+        }
+        return 0;
+    }
+
+    private int getVowifiResId(int index) {
+        switch (index) {
+            case 0:
+                return R.drawable.stat_sys_vowifi;
+            case 1:
+                return R.drawable.stat_sys_vowifi_slot1;
+            case 2:
+                return R.drawable.stat_sys_vowifi_slot2;
+        }
+        return 0;
+    }
+
+    private int getImsResId(int index, boolean volte, boolean vowifi) {
+        int result = 0;
+        if (volte) {
+            result = getVolteResId(index);
+        }
+        if (vowifi) {
+            result = getVowifiResId(index);
+        }
+        return result;
+    }
+
     @Override
     public void removeCallback(@NonNull SignalCallback cb) {
         mCallbackHandler.setListening(cb, false);
@@ -767,6 +859,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
         mCurrentUserId = newUserId;
         mAccessPoints.onUserSwitched(newUserId);
         updateConnectivity();
+        updateImsIcon();
     }
 
     @Override
@@ -789,6 +882,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
         switch (action) {
             case ConnectivityManager.CONNECTIVITY_ACTION:
                 updateConnectivity();
+                updateImsIcon();
                 break;
             case Intent.ACTION_AIRPLANE_MODE_CHANGED:
                 refreshLocale();
@@ -880,6 +974,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
             return;
         }
         doUpdateMobileControllers();
+        updateImsIcon();
     }
 
     private void filterMobileSubscriptionInSameGroup(List<SubscriptionInfo> subscriptions) {
@@ -1093,6 +1188,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
         }
         mWifiSignalController.notifyListeners();
         mEthernetSignalController.notifyListeners();
+        updateImsIcon();
     }
 
     /**
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/SignalCallback.kt b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/SignalCallback.kt
index 501f69440456..8d345187779c 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/SignalCallback.kt
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/connectivity/SignalCallback.kt
@@ -91,6 +91,9 @@ interface SignalCallback {
     @JvmDefault
     fun setMobileDataEnabled(enabled: Boolean) {}
 
+    @JvmDefault
+    fun setImsIcon(icon: ImsIconState) {}
+
     /**
      * Callback for listeners to be able to update the connectivity status
      * @param noDefaultNetwork whether there is any default network.
@@ -189,3 +192,29 @@ data class IconState(
                 .toString()
     }
 }
+
+data class ImsIconState(
+    @JvmField var visible: Boolean,
+    @JvmField val slot1Icon: Int,
+    @JvmField val slot2Icon: Int,
+    @JvmField val contentDescription: String
+) {
+    constructor(
+        slot1Icon: Int,
+        slot2Icon: Int,
+        contentDescription: String
+    ): this(
+        slot1Icon > 0 || slot2Icon > 0,
+        slot1Icon,
+        slot2Icon,
+        contentDescription) {}
+
+    override fun toString(): String {
+        return java.lang.StringBuilder("ImsIconState[")
+                .append("visible=").append(visible)
+                .append(",slot1Icon=").append(slot1Icon)
+                .append(",slot2Icon=").append(slot2Icon)
+                .append(",contentDescription=").append(contentDescription)
+                .append(']').toString()
+    }
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java
index e2b43c6f3ead..cad3b9d45ace 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java
@@ -16,6 +16,7 @@ package com.android.systemui.statusbar.phone;
 
 import static com.android.systemui.statusbar.phone.StatusBarIconHolder.TYPE_BLUETOOTH;
 import static com.android.systemui.statusbar.phone.StatusBarIconHolder.TYPE_ICON;
+import static com.android.systemui.statusbar.phone.StatusBarIconHolder.TYPE_IMS;
 import static com.android.systemui.statusbar.phone.StatusBarIconHolder.TYPE_MOBILE;
 import static com.android.systemui.statusbar.phone.StatusBarIconHolder.TYPE_MOBILE_NEW;
 import static com.android.systemui.statusbar.phone.StatusBarIconHolder.TYPE_WIFI;
@@ -45,9 +46,11 @@ import com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver;
 import com.android.systemui.statusbar.BaseStatusBarFrameLayout;
 import com.android.systemui.statusbar.StatusBarBluetoothView;
 import com.android.systemui.statusbar.StatusBarIconView;
+import com.android.systemui.statusbar.StatusBarImsView;
 import com.android.systemui.statusbar.StatusBarMobileView;
 import com.android.systemui.statusbar.StatusBarWifiView;
 import com.android.systemui.statusbar.StatusIconDisplayable;
+import com.android.systemui.statusbar.connectivity.ImsIconState;
 import com.android.systemui.statusbar.connectivity.ui.MobileContextProvider;
 import com.android.systemui.statusbar.phone.PhoneStatusBarPolicy.BluetoothIconState;
 import com.android.systemui.statusbar.phone.StatusBarSignalPolicy.CallIndicatorIconState;
@@ -138,6 +141,8 @@ public interface StatusBarIconController {
 
     public void setIconVisibility(String slot, boolean b);
 
+    public void setImsIcon(String slot, ImsIconState state);
+
     /**
      * Sets the live region mode for the icon
      *
@@ -486,6 +491,9 @@ public interface StatusBarIconController {
 
                 case TYPE_NETWORK_TRAFFIC:
                     return addNetworkTraffic(index, slot);
+
+                case TYPE_IMS:
+                    return addImsIcon(index, slot, holder.getImsState());
             }
 
             return null;
@@ -595,6 +603,13 @@ public interface StatusBarIconController {
             return view;
         }
 
+        protected StatusBarImsView addImsIcon(int index, String slot, ImsIconState state) {
+            StatusBarImsView view = onCreateStatusBarImsView(slot);
+            view.applyImsState(state);
+            mGroup.addView(view, index, onCreateLayoutParams());
+            return view;
+        }
+
         private StatusBarIconView onCreateStatusBarIconView(String slot, boolean blocked) {
             return new StatusBarIconView(mContext, slot, null, blocked);
         }
@@ -636,6 +651,11 @@ public interface StatusBarIconController {
             StatusBarNetworkTraffic view = new StatusBarNetworkTraffic(mContext);
             return view;
         }
+        
+        private StatusBarImsView onCreateStatusBarImsView(String slot) {
+            StatusBarImsView view = StatusBarImsView.fromContext(mContext, slot);
+            return view;
+        }
 
         protected LinearLayout.LayoutParams onCreateLayoutParams() {
             return new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, mIconSize);
@@ -696,6 +716,9 @@ public interface StatusBarIconController {
                 case TYPE_BLUETOOTH:
                     onSetBluetoothIcon(viewIndex, holder.getBluetoothState());
                     return;
+                case TYPE_IMS:
+                    onSetImsIcon(viewIndex, holder.getImsState());
+                    return;
                 default:
                     break;
             }
@@ -742,6 +765,13 @@ public interface StatusBarIconController {
             }
         }
 
+        public void onSetImsIcon(int viewIndex, ImsIconState state) {
+            StatusBarImsView view = (StatusBarImsView) mGroup.getChildAt(viewIndex);
+            if (view != null) {
+                view.applyImsState(state);
+            }
+        }
+        
         @Override
         public void dispatchDemoCommand(String command, Bundle args) {
             if (!mDemoable) {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconControllerImpl.java
index 7674e48e75d4..21541bd00e15 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconControllerImpl.java
@@ -38,6 +38,7 @@ import com.android.systemui.demomode.DemoModeController;
 import com.android.systemui.dump.DumpManager;
 import com.android.systemui.statusbar.CommandQueue;
 import com.android.systemui.statusbar.StatusIconDisplayable;
+import com.android.systemui.statusbar.connectivity.ImsIconState;
 import com.android.systemui.statusbar.phone.PhoneStatusBarPolicy.BluetoothIconState;
 import com.android.systemui.statusbar.phone.StatusBarSignalPolicy.CallIndicatorIconState;
 import com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState;
@@ -367,6 +368,23 @@ public class StatusBarIconControllerImpl implements Tunable,
         }
     }
 
+    @Override
+    public void setImsIcon(String slot, ImsIconState state) {
+        if (state == null) {
+            removeIcon(slot, 0);
+            return;
+        }
+
+        StatusBarIconHolder holder = mStatusBarIconList.getIconHolder(slot, 0);
+        if (holder == null) {
+            holder = StatusBarIconHolder.fromImsIconState(state);
+            setIcon(slot, holder);
+        } else {
+            holder.setImsState(state);
+            handleSet(slot, holder);
+        }
+    }
+    
     private final CommandQueue.Callbacks mCommandQueueCallbacks = new CommandQueue.Callbacks() {
         @Override
         public void setIcon(String slot, StatusBarIcon icon) {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconHolder.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconHolder.java
index 28941a4509de..aad0cf69dc8e 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconHolder.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconHolder.java
@@ -23,6 +23,7 @@ import android.graphics.drawable.Icon;
 import android.os.UserHandle;
 
 import com.android.internal.statusbar.StatusBarIcon;
+import com.android.systemui.statusbar.connectivity.ImsIconState;
 import com.android.systemui.statusbar.phone.PhoneStatusBarPolicy.BluetoothIconState;
 import com.android.systemui.statusbar.phone.StatusBarSignalPolicy.CallIndicatorIconState;
 import com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState;
@@ -66,6 +67,8 @@ public class StatusBarIconHolder {
 
     public static final int TYPE_BLUETOOTH = 5;
 
+    public static final int TYPE_IMS = 6;
+
     public static final int TYPE_NETWORK_TRAFFIC = 42;
 
     @IntDef({
@@ -75,6 +78,7 @@ public class StatusBarIconHolder {
             TYPE_MOBILE_NEW,
             TYPE_WIFI_NEW,
             TYPE_BLUETOOTH,
+            TYPE_IMS,
             TYPE_NETWORK_TRAFFIC
     })
     @Retention(RetentionPolicy.SOURCE)
@@ -84,6 +88,7 @@ public class StatusBarIconHolder {
     private WifiIconState mWifiState;
     private MobileIconState mMobileState;
     private BluetoothIconState mBluetoothState;
+    private ImsIconState mImsState;
     private @IconType int mType = TYPE_ICON;
     private int mTag = 0;
 
@@ -152,6 +157,14 @@ public class StatusBarIconHolder {
         return holder;
     }
 
+    /** */
+    public static StatusBarIconHolder fromImsIconState(ImsIconState state) {
+        StatusBarIconHolder holder = new StatusBarIconHolder();
+        holder.mImsState = state;
+        holder.mType = TYPE_IMS;
+        return holder;
+    }
+
     /**
      * ONLY for use with the new connectivity pipeline, where we only need a subscriptionID to
      * determine icon ordering and building the correct view model
@@ -226,6 +239,14 @@ public class StatusBarIconHolder {
         mBluetoothState = state;
     }
 
+    public ImsIconState getImsState() {
+        return mImsState;
+    }
+
+    public void setImsState(ImsIconState state) {
+        mImsState = state;
+    }
+
     public boolean isVisible() {
         switch (mType) {
             case TYPE_ICON:
@@ -241,6 +262,8 @@ public class StatusBarIconHolder {
                 return true;
             case TYPE_BLUETOOTH:
                 return mBluetoothState.visible;
+            case TYPE_IMS:
+                return mImsState.visible;
             default:
                 return true;
         }
@@ -273,6 +296,10 @@ public class StatusBarIconHolder {
             case TYPE_BLUETOOTH:
                 mBluetoothState.visible = visible;
                 break;
+
+            case TYPE_IMS:
+                mImsState.visible = visible;
+                break;
         }
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarSignalPolicy.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarSignalPolicy.java
index de7bf3c021dd..4428e0ca57bb 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarSignalPolicy.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarSignalPolicy.java
@@ -27,6 +27,7 @@ import com.android.settingslib.mobile.TelephonyIcons;
 import com.android.systemui.R;
 import com.android.systemui.dagger.SysUISingleton;
 import com.android.systemui.statusbar.connectivity.IconState;
+import com.android.systemui.statusbar.connectivity.ImsIconState;
 import com.android.systemui.statusbar.connectivity.MobileDataIndicators;
 import com.android.systemui.statusbar.connectivity.NetworkController;
 import com.android.systemui.statusbar.connectivity.SignalCallback;
@@ -56,6 +57,7 @@ public class StatusBarSignalPolicy implements SignalCallback,
     private final String mSlotVpn;
     private final String mSlotNoCalling;
     private final String mSlotCallStrength;
+    private final String mSlotIms;
 
     private final Context mContext;
     private final StatusBarIconController mIconController;
@@ -70,6 +72,7 @@ public class StatusBarSignalPolicy implements SignalCallback,
     private boolean mHideWifi;
     private boolean mHideEthernet;
     private boolean mActivityEnabled;
+    private boolean mHideIms;
 
     // Track as little state as possible, and only for padding purposes
     private boolean mIsAirplaneMode = false;
@@ -106,6 +109,7 @@ public class StatusBarSignalPolicy implements SignalCallback,
         mSlotCallStrength =
                 mContext.getString(com.android.internal.R.string.status_bar_call_strength);
         mActivityEnabled = mContext.getResources().getBoolean(R.bool.config_showActivity);
+        mSlotIms = mContext.getString(com.android.internal.R.string.status_bar_ims);
     }
 
     /** Call to initilaize and register this classw with the system. */
@@ -156,13 +160,16 @@ public class StatusBarSignalPolicy implements SignalCallback,
         boolean hideMobile = hideList.contains(mSlotMobile);
         boolean hideWifi = hideList.contains(mSlotWifi);
         boolean hideEthernet = hideList.contains(mSlotEthernet);
+        boolean hideIms = hideList.contains(mSlotIms);
 
         if (hideAirplane != mHideAirplane || hideMobile != mHideMobile
-                || hideEthernet != mHideEthernet || hideWifi != mHideWifi) {
+                || hideEthernet != mHideEthernet || hideWifi != mHideWifi 
+                || hideIms != mHideIms) {
             mHideAirplane = hideAirplane;
             mHideMobile = hideMobile;
             mHideEthernet = hideEthernet;
             mHideWifi = hideWifi;
+            mHideIms = hideIms;
             // Re-register to get new callbacks.
             mNetworkController.removeCallback(this);
             mNetworkController.addCallback(this);
@@ -409,6 +416,19 @@ public class StatusBarSignalPolicy implements SignalCallback,
         // Don't care.
     }
 
+    @Override
+    public void setImsIcon(ImsIconState icon) {
+        boolean showIms = icon.visible && !mHideIms;
+        String description = icon.contentDescription;
+
+        if (showIms) {
+            mIconController.setImsIcon(mSlotIms, icon);
+            mIconController.setIconVisibility(mSlotIms, true);
+        } else {
+            mIconController.setIconVisibility(mSlotIms, false);
+        }
+    }
+    
     /**
      * Stores the statusbar state for no Calling & SMS.
      */
diff --git a/packages/SystemUI/tests/Android.bp b/packages/SystemUI/tests/Android.bp
index 3c418ed49adc..8e095b437fb6 100644
--- a/packages/SystemUI/tests/Android.bp
+++ b/packages/SystemUI/tests/Android.bp
@@ -36,6 +36,7 @@ android_test {
         "android.test.runner",
         "telephony-common",
         "android.test.base",
+        "ims-common",
     ],
     aaptflags: [
         "--extra-packages com.android.systemui",
